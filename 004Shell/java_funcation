################################
#james.liu
#Tue Dec 25 11:50:26 CST 2018
#用来启动，停止，重启，查看日志
###############
start(){
PID=`ps -ef |grep -w $service1|grep -v grep |awk '{print $2}'`
if [ ! -z $PID ];then
	echo -e "\033[31m服务$service1已经启动,无法再启动\033[0m"

else
	true >`pwd`/nohup.out
	nohup java -jar `pwd`/$service1 &
	echo -e "\033[32m服务$service1启动成功\033[0m"
fi
}
stop(){
PID=`ps -ef |grep -w $service1|grep -v grep |awk '{print $2}'`
if [ ! -z $PID ];then
	kill -9 `ps -ef |grep  $service1|grep -v grep |awk '{print $2}'`
	echo -e "\033[32m服务$service1停止成功\033[0m"
else
         echo -e "\033[31m服务$service1没有启动\033[0m"
fi
}
help(){
echo -e "\033[31m\t$0 UAGES\033[0m"
cat <<EOF
	$0 start | stop | restart | status | help | logs |upgrade
EOF
}
status(){
PID=`ps -ef |grep -w $service1|grep -v grep |awk '{print $2}'`
if [ ! -z $PID ];then
echo -e "\033[32m服务$service1正在运行\033[0m" 
else
	 echo -e "\033[31m服务$service1没有启动\033[0m" 
fi
}
upgrade(){
if [ ! -d `pwd`/JAR_upgrade ];then
	mkdir -p `pwd`/JAR_upgrade
fi
if [ ! -d `pwd`/bak ];then
	mkdir -p `pwd`/bak
fi
cd JAR_upgrade
if [ ! -f `pwd`/$service1 ];then
        echo "没有该文件`pwd`/$service1,没有办法升级"
        exit 100
fi

unzip ../$service1 >../$service1_upgrade.logs && echo "解压完成"  ||exit  101

unzip -o $service1  >../$service1_upgrade.logs  && echo "升级包解压完成" || exit  102

rm -rf ../bak/*
mv ../$service1 ../bak && 
mv  ./$service1 ../bak/upgrade.jar
jar -cvfM0 ../$service1 ./ && echo "打包完成" || echo "打包失败,从bak中回滚" || exit 100

##清除目录
for i in `ls |grep -v $service1`
do
rm -rf $i
done

clear 
echo -e "\033[31m升级包完成,正在重启\033[0m" 
cd ..
}
logs(){
tailf `pwd`/nohup.out
}
###################
if [ ! -f `pwd`/$service1 ];then
	echo "没有该文件`pwd`/$service1" 
	exit 100
fi
case  $1 in
start)
start
;;
stop)
stop
;;
restart)
stop
start
;;
status)
status
;;
logs)
logs
;;
upgrade)
upgrade
stop
sleep 1
start
;;
help|-h|--help)
help
;;
*)
help
;;
esac 
